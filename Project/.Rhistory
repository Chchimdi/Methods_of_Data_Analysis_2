fit_sat <- lm(IQ ~ Adoptive * Biological, data = data1)
new_data <- expand.grid(
Biological = unique(data1$Biological),
Adoptive = unique(data1$Adoptive))
#View(new_data)
new_data$pred <- predict(fit_add, newdata =new_data)
new_data <- expand.grid(
Biological = unique(data1$Biological),
Adoptive = unique(data1$Adoptive))
#View(new_data)
new_data$pred <- predict(fit_add, newdata =new_data)
round(xtabs(pred ~ Biological + Adoptive, new_data), 2) # a table
qplot(reorder(Biological, pred), pred, data = new_data,
colour = Adoptive, geom = "line", group = Adoptive)
new_data <- expand.grid(
Biological = unique(data1$Biological),
Adoptive = unique(data1$Adoptive))
#View(new_data)
new_data$pred <- predict(fit_sat, newdata = new_data)
round(xtabs(pred ~ Biological + Adoptive, new_data), 2) # a table
qplot(reorder(Biological, pred), pred, data = new_data,
colour = Adoptive, geom = "line", group = Adoptive)
new_data <- expand.grid(
Biological = unique(data1$Biological),
Adoptive = unique(data1$Adoptive))
new_data$pred <- predict(fit_sat, newdata = new_data)
round(xtabs(pred ~ Biological + Adoptive, new_data), 2) # a table
qplot(reorder(Biological, pred), pred, data = new_data,
colour = Adoptive, geom = "line", group = Adoptive)
new_data$pred_sat <- predict(fit_sat, newdata = new_data)
round(xtabs(pred_sat ~ Biological + Adoptive, new_data), 2) # a table
qplot(reorder(Biological, pred_sat), pred_sat, data = new_data,
colour = Adoptive, geom = "line", group = Adoptive)
data2$fac.Block <- factor(data2$Block)
fit_add2 <- lm(Success ~ fac.Block + Treatment, data = data2)
summary(fit_add2)
?ex1419
#head(ex1419)
data2 <- ex1419
View(data2)
data2$fac.Block <- factor(data2$Block)
fit_add2 <- lm(Success ~ fac.Block * Treatment, data = data2)
summary(fit_add2)
data2$fac.Block <- factor(data2$Block)
fit_add2 <- lm(Success ~ fac.Block + Treatment, data = data2)
summary(fit_add2)
fit_sat2 <- lm(Success ~ fac.Block * Treatment, data = data2)
summary(fit_sat2)
data2$fac.Block <- factor(data2$Block)
fit_add2 <- lm(Success ~ PriorExp + Treatment, data = data2)
summary(fit_add2)
data2$fac.Block <- factor(data2$Block)
fit_sat2 <- lm(Success ~ fac.Block * Treatment, data = data2)
summary(fit_sat2)
fit_sat3 <- lm(Success ~ PriorExp * Treatment, data = data2)
summary(fit_sat3)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
df<- read.csv("/Users/chikezic/Desktop/OSU/2023/ST512/Project/ST512_Project_data.csv")
head(df)
View(df)
df$Country <- NULL
# Converting character columns to factor
for (i in seq_along(df)) {
if (is.character(df[[i]])) {
df[[i]] <- as.factor(df[[i]])
}
}
df <- df[, c("Life.expectancy", setdiff(names(df), "Life.expectancy"))]
head(df)
is_numeric <- sapply(df, is.numeric)
# Get the names of numeric columns
numeric_cols <- names(df)[is_numeric]
for(col in numeric_cols){
# calculate the mean of the column excluding 0s and NAs
mean_col <- mean(df[[col]][df[[col]] != 0 & !is.na(df[[col]])], na.rm = TRUE)
# replace 0s and NAs in the column with the calculated mean
df[[col]][df[[col]] == 0 | is.na(df[[col]])] <- mean_col
}
print(names(df))
life_mod <- lm(Life.expectancy ~ ., data = df)
summary(life_mod)
res <- residuals(life_mod)
fit <- fitted(life_mod)
plot(fit, res)
abline(0, 0, lty=2)
#Overlay the row number of observations
plot(fit, res, cex=0)
abline(0, 0, lty=2)
text(fit, res)
life_mod2 <- lm(Life.expectancy ~ (.^2), data = df)
summary(life_mod2)
anova(life_mod, life_mod2)
anova(life_mod, life_mod2)
# Run initial full model
full_model <- lm(response ~ ., data = df)
df<- read.csv("/Users/chikezic/Desktop/OSU/2023/ST512/Project/ST512_Project_data.csv")
head(df)
View(df)
df$Country <- NULL
# Converting character columns to factor
for (i in seq_along(df)) {
if (is.character(df[[i]])) {
df[[i]] <- as.factor(df[[i]])
}
}
df <- df[, c("Life.expectancy", setdiff(names(df), "Life.expectancy"))]
head(df)
is_numeric <- sapply(df, is.numeric)
# Get the names of numeric columns
numeric_cols <- names(df)[is_numeric]
for(col in numeric_cols){
# calculate the mean of the column excluding 0s and NAs
mean_col <- mean(df[[col]][df[[col]] != 0 & !is.na(df[[col]])], na.rm = TRUE)
# replace 0s and NAs in the column with the calculated mean
df[[col]][df[[col]] == 0 | is.na(df[[col]])] <- mean_col
}
# Run initial full model
full_model <- lm(response ~ ., data = df)
# Run initial full model
full_model <- lm(Life.expectancy ~ ., data = df)
# Set a cutoff for the p-value
p_cutoff <- 0.05
# Repeat the procedure until all p-values are below the cutoff
repeat {
# Get summary of the full model
summary_model <- summary(full_model)
# Get the p-values of the coefficients
p_values <- summary_model$coefficients[, 4]
# Find the variable with the highest p-value
worst_var <- names(which.max(p_values[-1])) # -1 to exclude intercept
# Check if the worst variable's p-value is above the cutoff
if (p_values[worst_var] > p_cutoff) {
# Remove the worst variable from the model
full_model <- update(full_model, as.formula(paste("~ . -", worst_var)))
} else {
# If all p-values are below the cutoff, stop the procedure
break
}
}
# Print the final model
summary(full_model)
knitr::opts_chunk$set(echo = TRUE)
library(leaps)
library(Sleuth3)
library(ggplot2)
SS <- c(8100, 6240, 5980, 6760, 5500, 5250, 5750, 5160)
dfr <- c(27, 26, 26, 26, 25, 25, 25, 24)
p <- c(0, 1, 1, 1, 2, 2, 2, 3)
p <- (p+1) #SinceIamusingformulasgiveninlab
p_str <- c("None", "X1", "X2", "X3", "X1, X2", "X1, X3", "X2, X3", "X1, X2, X3")
MSE <- SS/dfr
MSE
n = 28
Cp <- (n - p)*MSE/MSE[length(MSE)] + 2*p - n
p_str
Cp
BIC <- n*log(MSE) + (p+1)*log(n)
p_str
BIC
AIC <- n*log(MSE) + 2*(p+1)
p_str
AIC
sprintf("Smallest Cp is X1,X3 cp = %0.3f", min(Cp))
sprintf("Smallest BIC is X2, BIC = %0.3f", min(BIC))
sprintf("Smallest AIC is X1,X3, AIC = %0.3f", min(AIC))
head(ex1220)
data1 <- ex1220
all_mod <- regsubsets(Total ~ Elev + DistNear + DistSc + AreaNear, data = data1,
nbest = 5, method = "exhaustive")
summary(all_mod)
plot(all_mod)
summary(all_mod)$cp
plot(all_mod, scale = 'Cp')
modwithout <- lm(Total ~ Elev + AreaNear, data = data1)
modwith <- lm(Total ~ Elev + Area + AreaNear, data = data1)
anova(modwithout, modwith)
foward_mod <- regsubsets(Native ~ Elev + DistNear + DistSc + AreaNear, data = data1,
nbest = 5, method = "forward")
summary(foward_mod)
plot(foward_mod)
backward_mod <- regsubsets(Native ~ Elev + DistNear + DistSc + AreaNear, data = data1,
nbest = 5, method = "backward")
summary(backward_mod)
plot(backward_mod)
modwithout2 <- lm(Native ~ Elev + AreaNear, data = data1)
modwith2 <- lm(Native ~ Elev+ Area + AreaNear, data = data1)
anova(modwithout2, modwith2)
#?ex1518
head(ex1518)
data3 <- ex1518
linmod3 <- lm(Cases ~ Year * Vaccine, data = data3)
summary(linmod3)
linmod3 <- lm(Cases ~ Year * Vaccine, data = data3)
pacf(residuals(linmod3))
pacf(residuals(linmod3), plot = F)$acf[1]
r1 <- acf(residuals(linmod3), plot = F)$acf[2]
SE_adj <- sqrt((1+r1)/(1-r1))*summary(linmod3)$coef[,2]
SE_adj
n <- nrow(data3)
t_stat <- abs(summary(linmod3)$coef[,1])/SE_adj
p_value <-2 * pt(-abs(t_stat), n-4, lower.tail = TRUE)
summary(linmod3)$coef
round(cbind(SE_adj, t_stat, p_value), 4)
backward <- regsubsets(Life.expectancy ~ (.^2),
data = subset(case1201, State != "Alaska"), nbest = 7, method = "backward")
df<- read.csv("/Users/chikezic/Desktop/OSU/2023/ST512/Project/ST512_Project_data.csv")
head(df)
#View(df)
life_mod <- lm(Life.expectancy ~ ., data = df)
summary(life_mod)
backward <- regsubsets(Life.expectancy ~ (.^2),
data = df, nbest = 7, method = "backward")
library(ggplot2)
library(Rmisc)
library(graphics)
library(leaps)
df<- read.csv("project_anova.csv")
library(ggplot2)
library(Rmisc)
library(graphics)
library(leaps)
df<- read.csv("project_anova.csv")
head(df)
#View(df)
# Converting character columns to factor
for (i in seq_along(df)) {
if (is.character(df[[i]])) {
df[[i]] <- as.factor(df[[i]])
}
}
head(df)
table <- aggregate(Salary ~ Profession + Region, data = df, FUN = length)
xtabs(Salary ~ Profession + Region, table)
fit_add <- lm(Salary ~ Profession + Region, data = df)
summary(fit_add)
anova(fit_add)
lmod1 <- lm(Salary ~ Profession + Region, data = df)
df2 <- fortify(lmod1, df)
ggplot(data=df2, aes(.fitted, .resid)) + geom_point() +
theme(axis.text = element_text(size=12),
axis.title = element_text(size=14, face="bold"))
fit_sat <- lm(Salary ~ Profession * Region, data = df)
summary(fit_sat)
anova(fit_add, fit_sat)
anova(fit_sat)
new_data <- expand.grid(
Profession = unique(df$Profession),
Region = unique(df$Region))
new_data$pred <- predict(fit_add, newdata =new_data)
round(xtabs(pred ~ Profession + Region, new_data), 2)
qplot(reorder(Profession, pred), pred, data = new_data,
colour = Region, geom = "line", group = Region)
new_data$pred_sat <- predict(fit_sat, newdata =new_data)
round(xtabs(pred_sat ~ Profession + Region, new_data), 2)
qplot(reorder(Profession, pred_sat), pred_sat, data = new_data,
colour = Region, geom = "line", group = Region)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(formatR)
knitr::opts_chunk$set(echo = TRUE, tidy = 'formatR', tidy.opts = list(blank = FALSE, width.cutoff = 80))
library(ggplot2)
library(Sleuth3)
library(Rmisc)
library(graphics)
library(leaps)
load("Fish_Data.RData")
head(Data)
mod1 = lm(Weight ~ Length1 + Length2 + Length3 + Height + Width + Species, data = Data)
summary(mod1)
ggplot(data = Data, aes(mod1$fit, mod1$resid)) +
geom_point() +
theme_linedraw() +
ggtitle('Residual plot for model 1') +
geom_hline(yintercept = 0, lty = 2, color="red") + labs(x = "fitted value", y = "residuals")
Data$Weight_new <- (Data$Weight)^(1/3)
mod2 = lm(Weight_new ~ Length1 + Length2 + Length3 + Height + Width + Species, data = Data)
summary(mod2)
ggplot(data = Data, aes(mod2$fit, mod2$resid)) +
geom_point() +
theme_linedraw() +
ggtitle('Residual plot for model 1') +
geom_hline(yintercept = 0, lty = 2, color="red") + labs(x = "fitted value", y = "residuals")
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
ref_fish <- relevel(Data$Species, ref="Whitefish")
mod3 <- lm(Weight_new ~ ref_fish, Length1, Length2, Length3, Height, Width, data = Data)
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
new <- data.frame(Length1 = c(25), Length2 = c(30), Length3 = c(35), Height = c(16), Width = c(5), Species = c("Bream"))
sprintf("Predicted value of transformed weight of a Bream fish is %0.3f", predict(mod2, newdata = new))
knitr::opts_chunk$set(echo = TRUE)
library(Sleuth3)
library(ggplot2)
library(Rmisc)
library(graphics)
library(leaps)
load("Fish_Data.RData")
head(Data)
#View(Data)
lin_mod1 <- lm(Weight ~ Species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod1)
plot(lin_mod1)
Data$Weight_new <- (Data$Weight)^(1/3)
lin_mod2 <- lm(Weight_new ~ Species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod2)
plot(lin_mod2)
new_species <- relevel(Data$Species, ref="Whitefish")
lin_mod3 <- lm(Weight_new ~ new_species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod3)
lin_mod4 <- lm(Weight_new ~ Species + Length1 + Length2 + Length3 + Height + Width + Species:Height + Species:Width, data = Data)
summary(lin_mod4)
anova(lin_mod2, lin_mod4)
anova(lin_mod2)
test_value <- data.frame(Species = "Bream", Length1 = 25, Length2 = 30, Length3 = 35, Height = 16, Width = 5)
pred_weight <- predict(lin_mod2, newdata = test_value)
sprintf("predicted transformed weight = %f", pred_weight)
sprintf("Prediction interval")
pred_int <-predict(lin_mod2, test_value, interval ="prediction", level=0.95 )
pred_int
sprintf("Transformed Prediction interval")
pred_int^(3)
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
ref_fish <- relevel(Data$Species, ref="Whitefish")
mod31 <- lm(Weight_new ~ ref_fish, Length1, Length2, Length3, Height, Width, data = Data)
load("Fish_Data.RData")
head(Data)
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
Data$ref_fish <- relevel(Data$Species, ref="Whitefish")
mod31 <- lm(Weight_new ~ ref_fish, Length1, Length2, Length3, Height, Width, data = Data)
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
Data$ref_fish <- relevel(Data$Species, ref="Whitefish")
mod31 <- lm(Weight_new ~ ref_fish, Length1, Length2, Length3, Height, Width, data = Data)
new_species <- relevel(Data$Species, ref="Whitefish")
lin_mod3 <- lm(Weight_new ~ new_species + Length1 + Length2 + Length3 + Height + Width, data = Data)
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
ref_fish <- relevel(Data$Species, ref="Whitefish")
mod31 <- lm(Weight_new ~ ref_fish, Length1, Length2, Length3, Height, Width, data = Data)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(formatR)
knitr::opts_chunk$set(echo = TRUE, tidy = 'formatR', tidy.opts = list(blank = FALSE, width.cutoff = 80))
library(ggplot2)
library(Sleuth3)
library(Rmisc)
library(graphics)
library(leaps)
load("Fish_Data.RData")
head(Data)
mod1 = lm(Weight ~ Length1 + Length2 + Length3 + Height + Width + Species, data = Data)
summary(mod1)
ggplot(data = Data, aes(mod1$fit, mod1$resid)) +
geom_point() +
theme_linedraw() +
ggtitle('Residual plot for model 1') +
geom_hline(yintercept = 0, lty = 2, color="red") + labs(x = "fitted value", y = "residuals")
Data$Weight_new <- (Data$Weight)^(1/3)
mod2 = lm(Weight_new ~ Length1 + Length2 + Length3 + Height + Width + Species, data = Data)
summary(mod2)
ggplot(data = Data, aes(mod2$fit, mod2$resid)) +
geom_point() +
theme_linedraw() +
ggtitle('Residual plot for model 1') +
geom_hline(yintercept = 0, lty = 2, color="red") + labs(x = "fitted value", y = "residuals")
new_species <- relevel(Data$Species, ref="Whitefish")
lin_mod3 <- lm(Weight_new ~ new_species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod3)
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
ref_fish <- relevel(Data$Species, ref="Whitefish")
mod31 <- lm(Weight_new ~ ref_fish, Length1, Length2, Length3, Height, Width, data = Data)
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
ref_fish <- relevel(Data$Species, ref="Whitefish")
mod31 <- lm(Weight_new ~ ref_fish, Length1, Length2, Length3, Height, Width, data = Data)
# Smeltfish <- Data$Weight_new[Data$Species == "Smelt"]
# Whitefish <- Data$Weight_new[Data$Species == "Whitefish"]
# t_test_result <- t.test(Smeltfish, Whitefish)
# print(t_test_result)
ref_fish <- relevel(Data$Species, ref="Whitefish")
mod31 <- lm(Weight_new ~ ref_fish + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(mod31)
knitr::opts_chunk$set(echo = TRUE)
library(Sleuth3)
library(ggplot2)
library(Rmisc)
library(graphics)
library(leaps)
load("Fish_Data.RData")
head(Data)
#View(Data)
lin_mod1 <- lm(Weight ~ Species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod1)
plot(lin_mod1)
Data$Weight_new <- (Data$Weight)^(1/3)
lin_mod2 <- lm(Weight_new ~ Species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod2)
plot(lin_mod2)
new_species <- relevel(Data$Species, ref="Whitefish")
lin_mod3 <- lm(Weight_new ~ new_species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod3)
lin_mod4 <- lm(Weight_new ~ Species + Length1 + Length2 + Length3 + Height + Width + Species:Height + Species:Width, data = Data)
summary(lin_mod4)
anova(lin_mod2, lin_mod4)
anova(lin_mod2)
test_value <- data.frame(Species = "Bream", Length1 = 25, Length2 = 30, Length3 = 35, Height = 16, Width = 5)
pred_weight <- predict(lin_mod2, newdata = test_value)
sprintf("predicted transformed weight = %f", pred_weight)
sprintf("Prediction interval")
pred_int <-predict(lin_mod2, test_value, interval ="prediction", level=0.95 )
pred_int
sprintf("Transformed Prediction interval")
pred_int^(3)
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837, 1887.51), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS", "F")
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837, 1887.51), ncol = 4, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS", "F")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837, 1887.51,0,0), ncol = 4, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS", "F")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 4, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS", "F")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS", "F")
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
vals <- matrix(c(11, 910.14, 82.74, 1887.51, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- matrix(c(11, 910.14, 82.74, 1887.51, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 4, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS")
vals <- matrix(c(11, 910.14, 82.74, 1887.51, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 4, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS", "F")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
knitr::opts_chunk$set(echo = TRUE)
library(Sleuth3)
library(ggplot2)
library(Rmisc)
library(graphics)
library(leaps)
load("Fish_Data.RData")
head(Data)
#View(Data)
lin_mod1 <- lm(Weight ~ Species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod1)
plot(lin_mod1)
Data$Weight_new <- (Data$Weight)^(1/3)
lin_mod2 <- lm(Weight_new ~ Species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod2)
plot(lin_mod2)
new_species <- relevel(Data$Species, ref="Whitefish")
lin_mod3 <- lm(Weight_new ~ new_species + Length1 + Length2 + Length3 + Height + Width, data = Data)
summary(lin_mod3)
lin_mod4 <- lm(Weight_new ~ Species + Length1 + Length2 + Length3 + Height + Width + Species:Height + Species:Width, data = Data)
summary(lin_mod4)
anova(lin_mod2, lin_mod4)
anova(lin_mod2)
vals <- matrix(c(11, 910.14, 82.74, 146, 6.40, 0.04, 157, 916.54, 5.837), ncol = 3, byrow = TRUE)
colnames(vals) <- c("Df", "SS", "MS")
rownames(vals) <- c("Regression", "Residual", "Total")
vals <- as.table(vals)
vals
test_value <- data.frame(Species = "Bream", Length1 = 25, Length2 = 30, Length3 = 35, Height = 16, Width = 5)
pred_weight <- predict(lin_mod2, newdata = test_value)
sprintf("predicted transformed weight = %f", pred_weight)
sprintf("Prediction interval")
pred_int <-predict(lin_mod2, test_value, interval ="prediction", level=0.95 )
pred_int
sprintf("Transformed Prediction interval")
pred_int^(3)
